#!/bin/sh

#  ldapdeleteuser : deletes a POSIX user account from LDAP

#  Copyright (C) 2005 Ganaël LAPLANCHE - Linagora
#  Copyright (C) 2006-2016 Ganaël LAPLANCHE
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
#  USA.

if [ -z "$1" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]
then
  echo "Usage : $0 <username | uid>"
  exit 1
fi

# Source runtime file
_RUNTIMEFILE="/usr/lib/ldapscripts/runtime"
. "$_RUNTIMEFILE"

# Find username : $1 must exist in LDAP !
_findentry "$USUFFIX,$SUFFIX" "(&(objectClass=posixAccount)(|(uid=$1)(uidNumber=$1)))"
[ -z "$_ENTRY" ] && end_die "User $1 not found in LDAP"

# Store _UID and _UDN for filters
if [ "$GCLASS" = "posixGroup" ]
then
  _getattribute "$_ENTRY" "uid"
  [ -z "$_ATTRIBUTE" ] && end_die "Error getting user attribute from LDAP (uid)"
  _UID="$_ATTRIBUTE"
fi
_UDN="$_ENTRY"

# Delete entry
_ldapdelete "$_UDN" || end_die "Error deleting user $_UDN from LDAP"

# Finally, delete this user from all his secondary groups
case $GCLASS in
  posixGroup)
    _findentries "$GSUFFIX,$SUFFIX" "(&(objectClass=posixGroup)(memberUid=$_UID))"
    echo "$_ENTRIES" | \
    while read _ENTRY
    do
      echo_log "Deleting user from secondary group: $_ENTRY"
      # Modify group entry
      _extractldif 2 | _filterldif | _utf8encode | _ldapmodify
    done
  ;;
  *)
    _findentries "$GSUFFIX,$SUFFIX" "(&(objectClass=$GCLASS)($_GMEMBERATTR=$_UDN))"
    echo "$_ENTRIES" | \
    while read _ENTRY
    do
      echo_log "Deleting user from secondary group: $_ENTRY"
      # Modify group entry
      _extractldif 3 | _filterldif | _utf8encode | _ldapmodify
    done
  ;;
esac

end_ok "Successfully deleted user $_UDN from LDAP"

# Ldif templates #################################
#
# PosixGroup (level "2") :
##dn: <entry>
##changetype: modify
##delete: <gmemberattr>
##<gmemberattr>: <uid>
#
# Others (level "3") :
###dn: <entry>
###changetype: modify
###delete: <gmemberattr>
###<gmemberattr>: <udn>
